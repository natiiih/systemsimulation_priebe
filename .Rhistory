# Transformation of the text:
# Converting the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Removing all numbers
docs <- tm_map(docs, removeNumbers)
# Removing english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Removing punctuations
docs <- tm_map(docs, removePunctuation)
# Removing all extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Build a term-document matrix (The matrix contains the frequency of the words.)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
# Displays the 20 most frequent words in the console for checking
head(d, 20)
# Generate the wordcloud with frequency of min. 2 and max. 200 words
wordcloud(words = d$word, freq = d$freq, min.freq = 2,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# Plott the histogram of the 20 most frequent words
barplot(d[1:20,]$freq, las = 2, names.arg = d[1:20,]$word,
col ="red", main ="Clinton: Most frequent words",
ylab = "word frequencies")
# Natalie Priebe
# 2018.06.28
# Course: System Simulations
# Text Mining - Presidential Election 2016: Trump Vs. Clinton
# Part II: Hillary Clinton
# Installation of required packages
install.packages("tm")  # text mining
install.packages("wordcloud") # generator for wordcloud
install.packages("RColorBrewer") # color palettes
# Load the required packages
library("tm") # text mining
library("wordcloud") # wordcloud
library("RColorBrewer") # color palettes
# Read the text and save it in 'clinton'
# Source: https://edition.cnn.com/2016/11/09/politics/hillary-clinton-concession-speech/index.html (accessed: 28.06.2018)
clinton <- readLines("Clinton_Speech.txt")
# Load the text as a corpus and save it in 'docs'
docs <- Corpus(VectorSource(clinton))
# Transformation of the text:
# Converting the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Removing all numbers
docs <- tm_map(docs, removeNumbers)
# Removing english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Removing punctuations
docs <- tm_map(docs, removePunctuation)
# Removing all extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Build a term-document matrix (The matrix contains the frequency of the words.)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
# Displays the 20 most frequent words in the console for checking
head(d, 20)
# Generate the wordcloud with frequency of min. 2 and max. 200 words
wordcloud(words = d$word, freq = d$freq, min.freq = 2,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# Plott the histogram of the 20 most frequent words
barplot(d[1:20,]$freq, las = 2, names.arg = d[1:20,]$word,
col ="red", main ="Presidential Election 2016: Most frequent words of Hillary Clintons Speech",
ylab = "word frequencies")
# Natalie Priebe
# 2018.06.28
# Course: System Simulation
# Text Mining - Presidential Election 2016: Trump Vs. Clinton
# Part I: Donald Trump
# Installation of required packages
install.packages("tm")  # text mining
install.packages("wordcloud") # generator for wordcloud
install.packages("RColorBrewer") # color palettes
# Load the required packages
library("tm") # text mining
library("wordcloud") # wordcloud
library("RColorBrewer") # color palettes
# Read the text and save it in 'trump'
# Source: http://time.com/3923128/donald-trump-announcement-speech/ (accessed: 28.06.2018)
trump <- readLines("Trump_Speech.txt")
# Load the text as a corpus and save it in 'docs'
docs <- Corpus(VectorSource(trump))
# Transformation of the text:
# Converting the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Removing all numbers
docs <- tm_map(docs, removeNumbers)
# Removing english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Removing punctuations
docs <- tm_map(docs, removePunctuation)
# Removing all extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Build a term-document matrix (The matrix contains the frequency of the words.)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
# Displays the 20 most frequent words in the console for checking
head(d, 20)
# Generate the wordcloud with frequency of min. 2 and max. 200 words
wordcloud(words = d$word, freq = d$freq, min.freq = 2,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(6,"Paired"))
# Plott the histogram of the 20 most frequent words
barplot(d[1:20,]$freq, las = 2, names.arg = d[1:20,]$word,
col ="blue", main ="Presidential Election 2016: Most frequent words of Donald Trumps Speech",
ylab = "word frequencies")
# Clear workspace
rm(list = ls())
x <- rnorm(500)
hist(x,main="Histogram",
xlab="Zufallszahlen",
ylab="Wahrscheinlichkeitsdichte",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
x <- read.table("RExam.dat", header=TRUE)
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat", header=TRUE)
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat", header=TRUE)
exams <- dat$exams
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(exams)
s <-  sd(exams)
curve(dnorm(exams,m,s),add=TRUE,lwd=3)
box()
exam
exams
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat", header=TRUE)
exams <- dat$exams
exams
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat", header=TRUE)
exams <- dat$exam
exams
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exams <- dat$exam
exams
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exams <- x$exam
exams
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exams <- x$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(exams)
s <-  sd(exams)
curve(dnorm(exams,m,s),add=TRUE,lwd=3)
box()
x <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exams <- x$exam
hist(exams,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(exams)
s <-  sd(exams)
curve(dnorm(exams,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-3,3,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(-100,100,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(0,100,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
#breaks=seq(0,100,length=30),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(0,100,length=50),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(0,100,length=10),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(0,100,length=1000),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(x)),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Histogram of exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(x)),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
# exams
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
x <- dat$exam
hist(x,main="Histogram of exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(x)),
freq=FALSE)
m <- mean(x)
s <-  sd(x)
curve(dnorm(x,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(x)
shapiro.test(x)
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
y <- dat$computer
hist(y,main="Histogram of computer literacy",
col="deepskyblue",
breaks=seq(0,100,length=length(y)),
freq=FALSE)
m <- mean(y)
s <-  sd(y)
curve(dnorm(y,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(y)
shapiro.test(y)
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
z <- dat$lecture
hist(z,main="Histogram of lectures attended",
col="deepskyblue",
breaks=seq(0,100,length=length(x)),
freq=FALSE)
m <- mean(z)
s <-  sd(z)
curve(dnorm(z,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(z)
shapiro.test(z)
# exam
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exam <- dat$exam
hist(exam,main="Histogram of exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(exam)),
freq=FALSE)
m <- mean(exam)
s <-  sd(exam)
curve(dnorm(exam,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(exam)
shapiro.test(exam)
# computer
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
computer <- dat$computer
hist(computer,main="Histogram of computer literacy",
col="deepskyblue",
breaks=seq(0,100,length=length(computer)),
freq=FALSE)
m <- mean(computer)
s <-  sd(computer)
curve(dnorm(computer,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(computer)
shapiro.test(computer)
# lecture
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
lecture <- dat$lecture
hist(lecture,main="Histogram of lectures attended",
col="deepskyblue",
breaks=seq(0,100,length=length(lecture)),
freq=FALSE)
m <- mean(lecture)
s <-  sd(lecture)
curve(dnorm(lecture,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(lecture)
shapiro.test(lecture)
# numeracy
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
numeracy <- dat$numeracy
hist(numeracy,main="Histogram of numeracy",
col="deepskyblue",
breaks=seq(0,100,length=length(numeracy)),
freq=FALSE)
m <- mean(numeracy)
s <-  sd(numeracy)
curve(dnorm(numeracy,m,s),add=TRUE,lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(numeracy)
shapiro.test(numeracy)
# exam
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exam <- dat$exam
hist(exam,main="Histogram of exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(exam)),
freq=FALSE)
m <- mean(exam)
s <-  sd(exam)
curve(dnorm(exam, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(exam)
shapiro.test(exam)
# computer
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
computer <- dat$computer
hist(computer,main="Histogram of computer literacy",
col="deepskyblue",
breaks=seq(0,100,length=length(computer)),
freq=FALSE)
m <- mean(computer)
s <-  sd(computer)
curve(dnorm(computer, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(computer)
shapiro.test(computer)
# lecture
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
lecture <- dat$lecture
hist(lecture,main="Histogram of lectures attended",
col="deepskyblue",
breaks=seq(0,100,length=length(lecture)),
freq=FALSE)
m <- mean(lecture)
s <-  sd(lecture)
curve(dnorm(lecture, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(lecture)
shapiro.test(lecture)
# numeracy
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
numeracy <- dat$numeracy
hist(numeracy,main="Histogram of numeracy",
col="deepskyblue",
breaks=seq(0,100,length=length(numeracy)),
freq=FALSE)
m <- mean(numeracy)
s <-  sd(numeracy)
curve(dnorm(numeracy, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(numeracy)
shapiro.test(numeracy)
# exam
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
exam <- dat$exam
hist(exam,main="Histogram of exam scores",
col="deepskyblue",
breaks=seq(0,100,length=length(exam)),
freq=FALSE)
m <- mean(exam)
s <-  sd(exam)
curve(dnorm(exam, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(exam)
shapiro.test(exam)
# computer
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
computer <- dat$computer
hist(computer,main="Histogram of computer literacy",
col="deepskyblue",
breaks=seq(0,100,length=length(computer)),
freq=FALSE)
m <- mean(computer)
s <-  sd(computer)
curve(dnorm(computer, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(computer)
shapiro.test(computer)
# lecture
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
lecture <- dat$lecture
hist(lecture,main="Histogram of lectures attended",
col="deepskyblue",
breaks=seq(0,100,length=length(lecture)),
freq=FALSE)
m <- mean(lecture)
s <-  sd(lecture)
curve(dnorm(lecture, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(lecture)
shapiro.test(lecture)
# numeracy
dat <- read.table("C:/Users/NP/sciebo/Masterstudium/3. Semester/Data Analysis and Statistics/Inference/RExam.dat.txt", header=TRUE)
numeracy <- dat$numeracy
hist(numeracy,main="Histogram of numeracy",
col="deepskyblue",
breaks=seq(0,100,length=length(numeracy)),
freq=FALSE)
m <- mean(numeracy)
s <-  sd(numeracy)
curve(dnorm(numeracy, m, s), add=TRUE, lwd=3)
box()
if(!require(nortest)){install.packages("nortest")}
library(nortest)
ad.test(numeracy)
shapiro.test(numeracy)
